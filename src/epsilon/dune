(ocamllex lexer)

(menhir
 (modules parser)
 (flags --table --inspection --explain --unused-tokens))

(library
 (name epsilon)
 (public_name epsilon)
 ; (flags -w -32)
 (preprocess
  (pps ppx_deriving.show))
 (libraries menhirLib))

;; -----------------------------------------------------------------------------

;; NOTE(kosi): https://gitlab.inria.fr/fpottier/menhir/
;; This section deals with the .messages file.
;; The following rule generates "parserMessages.ml" based on the source file
;; "parserMessages.messages". It requires the completeness check to have been
;; performed first. (If desired, this check could be disabled.)

(rule
 (deps parserMessages.check)
 (action
  (with-stdout-to
   parserMessages.ml
   (run
    menhir
    %{dep:parser.mly}
    --unused-tokens
    --compile-errors
    %{dep:parserMessages.messages}))))

;; This rule generates a file "parserMessages.auto.messages" that contains a
;; list of all error states. It is used by the completeness check.

(rule
 (with-stdout-to
  parserMessages.auto.messages
  (run menhir %{dep:parser.mly} --unused-tokens --list-errors)))

;; This rule implements the completeness check. It checks that every error
;; state listed in the auto-generated file "parserMessages.auto.messages"
;; is also listed in the file "parserMessages.messages" that is maintained
;; by the programmer.

(rule
 (with-stdout-to
  parserMessages.check
  (run
   menhir
   %{dep:parser.mly}
   --unused-tokens
   --compare-errors
   %{dep:parserMessages.auto.messages}
   --compare-errors
   %{dep:parserMessages.messages})))

;; -----------------------------------------------------------------------------
